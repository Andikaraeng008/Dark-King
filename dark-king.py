#Compile By King Mr_Z17
#YouTube Mr_Z17
import base64
exec(base64.b64decode("#Compile By King Mr_Z17
#YouTube Mr_Z17
import base64
exec(base64.b64decode("I0NvbXBpbGUgQnkgS2luZyBNcl9aMTcKI1lvdVR1YmUgTXJfWjE3CmltcG9ydCBiYXNlNjQKZXhlYyhiYXNlNjQuYjY0ZGVjb2RlKCJJME52YlhCcGJHVWdRbmtnUzJsdVp5Qk5jbDlhTVRjS0kxbHZkVlIxWW1VZ1RYSmZXakUzQ21sdGNHOXlkQ0JpWVhObE5qUUtaWGhsWXloaVlYTmxOalF1WWpZMFpHVmpiMlJsS0NKSk1FNTJZbGhDY0dKSFZXZFJibXRuVXpKc2RWcDVRazVqYkRsaFRWUmpTMGt4Ykhaa1ZsSXhXVzFWWjFSWVNtWlhha1V6UTIxc2RHTkhPWGxrUTBKcFdWaE9iRTVxVVV0YVdHaHNXWGxvYVZsWVRteE9hbEYxV1dwWk1GcEhWbXBpTWxKc1MwTktTazFGTlRKWmJHaERZMGRLU0ZaWFpGSmliWFJ1VlhwS2MyUldjRFZSYXpWcVlrUnNhRlJXVW1wVE1HdDRZa2hhYTFac1NYaFhWekZXV2pGU1dWTnRXbGhoYTFWNlVUSXhjMlJIVGtoUFdHeHJVVEJLY0ZkV2FFOWlSVFZ4VlZWMFlWZEhhSE5YV0d4dllWWnNXVlJ0ZUU5aGJFWXhWMWR3V2sxR2NFaFdiWEJwVFd4S2MxTXdUa3RUYXpGR1RsUktXbUpIYUVSWk1HUkxVMFphV0ZwR1NtbGlXRkoxVmxod1MyTXlVbGRqUkZaU1lYcFdjVmxyVW5OaFJsSlhWVzF3VkUxSGREUlphMmhoWVRGYWMxTllhRmhXZWtaWFYycEdVMWRXVG5SWGJHaG9ZVEZXTmxWVVNYaGpNbEpJVkd0b1VGZEhlSEpWVkVKTFkwWmtWMkZGT1dsU1ZGWjRWbFpXTUZsV1pFaGhTRTVZVjBkNGRsbFdXbk5YVmxKMFpVVTVhR0pGV1hoV01XUjNWMnN4UjJORmFGZGlXRUp3VkZkNFMyTXhUWGRVYTNSVVlYcEdSMVJzVWt0WGJVcElZVVZTV2sxSFVreFZNRnBoVjBad1IxTnRiR2xYUmtveFZteG9kMU15VFhsVmJHUnFVa1phVTFsWWNGZGpWbXh5Vlc1T2FGSnNTbGhXVnpGM1ZrVXhTR1JFVWxwaE1taG9XVlJHWVdNeFRsbGhSbWhYWld0YVdGWXljRWRWTVdSWFZHNVNXR0pIYUc5WlZFWlhUbXhXVlZOWWFHcE5iRXBKVmtkMGIxVkdaRWhsU0VwV1ZrVktURmt3V210V01rWkdUMWRzVTFaR1dqUldiRnBYVFVac1YxcEZhR2hUUlRWWlZqQmtOR1JzYkZkWGJrNVlWbXhLTUZwVlZUVmhSMHBHVjFob1YwMVhVak5XTW5ONFVqSk9SbUZHWkdsWFJVcDNWa1prTkZNeVRYaFVXR1JWWVROU1ZWbFljRWRTTVZKelZXdDBXR0pWY0VsWlZWWlRWMnN4U0ZWcmVGWk5SbkJvVmpCYWQxSXhUblJpUjJ4WVVtdHZlRlp0ZUc5a01VMTVWRmhzVm1KSFVuRlZhMXBoVlRGc1dXTkdaR3BXYlhoNVZsYzFUMkZHU25OVGJHaFhWbnBHTTFaclZYaFRSMUpGVld4d2FFMXRhRzlYVmxKSFdWZE5lRlJzYkdoU2JXaFlXbGQwWVZkR1dYbGpSV1JXVFZkU1dGWkhOVk5YUjBwSVlVYzVXbFpGV2xoVWJYaFhWbFpPV1dGSGNFNWlSWEJLVm10a01HSXhWa2RhUldoc1UwVndWMVpyVmt0VVJtdDNWMjEwVjAxcldrZFVNV1J6VlRGYVIxZHFVbGRpUm5CWVZGVmFjMVl4Y0VaaFIyaFVVbFJXV2xacVFtdE9SMUp6WWtaa1dHSnJOVmxXYlhoTFRVWndWbFpVVm1oU01IQkhWakZvYjFZd01WaFZhazVYVFc1T05GVnFTazlTYlVaSFdrZHNXRkpWY0ROV2ExcHJUa1pOZVZSWWFGVlhSMUpXV1ZST1UxWldiRmxqUldSVFRWWktlbFpYZERCWFIwcFdZMFZzV2xaV1dsUldNbk40VTBaV2NtVkdXazVTYmtKdlZtcENZV1F4U1hoVWJsSnBVako0V1ZWdGRIWmxSbHAwWlVjNWEwMVZNVFZXUm1oelZtMUtTRlZ1UmxaaE1YQm9WbFJHYzFkWFRrZGFSM0JYWWxob05WWnNZekZVTWtaSFUyNU9WR0pIYUZoV2JuQkhUVEZhY2xaWWFGUlNNVXBHVmxkNGQyRkZNWFJoUnpsWVZteEtTRmRXWkU1bFJsSnpZa2RvVTJKWGFGbFhiR1F3V1Zaa1IxZFliR3BTVjFKWFZGWmtVMWRHV2toT1ZrNVlVakJ3U1ZsVll6VlhiRnBHVjJ4b1ZXSllhRmhXYkZwUFYxZEdTR05GTldsU1dFSkxWbTEwYTAxSFNYaFdhMlJoVWxkb2MxVXdWbmRXTVZweVZtdDBWVkp0ZEROV01qRXdWakF4Y2xkclpGVk5WMUo2VmxSR1lWSXhaSEZWYkdScFVtNUNXVlpHVm1Gak1WbDRZMFZhYUZJeWFGVlZiRkpYVjJ4YWNWRnRkRTlTTVVwNldXdGFhMWRIU25KT1ZteFhZbGhvVEZSVlduZFdiRnBWVm0xb1UwMUlRa2hXYWtadllqRlpkMDFXYUZaaGF6VllWRmMxVDA1R1ZuRlRhemxUWWxWYVNGZHJaSE5YUmtwV1kwUk9WMkV4Y0hKVWExcE9aVlpTV1dGR1ZsaFNNVXBYVjFaU1QxVXhXbGRpUm14cVVsZFNWRlJXV2t0bGJGcFlaRVJDV0ZJd2NGZFpNRlp6VjJ4YVYxZHNVbGROYms0MFZUQmFWMk50VmtkWGF6VlRZbXRLZGxadGNFTlpWMUY0VTFob1ZXSnNTbkJWYWtvMFYxWldkR1JJV214U2JIQXdXbFZqTldFd01WWk5WRlpYVW0xb2VsWnRNVXRUUmxaMVVteGFhRTFZUW05V2JGSkhZekZrV0ZSclpHRlNNMEpZV1d4b2IwNVdXbk5aZWtaVlRXdGFTRlV5TlU5V1IwcElZVVpvVjJKdVFraFVWRVpoWTJ4YVdXRkdVbE5OVlhCSFZteGtOR1F5UmtaTldGSm9VbnBzV1ZadGVFdFRSbVJYV2tVMWJGSnNTbnBaYTJSdlZUSktXR0ZHYkZoaVIxRjNWMVphYTFJeFpGbGlSM0JUVmpGS1dGWkdXbXRWTVdSSFYydG9UMVpyTlZsVmFrSjNVMVpzVmxsNlZsaGlSbkJIVmpKNGIxWlhTbGxoUm1oWFlrWndVRll4WkVkVFIwNUdUbGRzVTFkRlNreFdiVEV3WVRBeFNGTllhRmRoTWxKb1ZXeGtiMk14VlhkV2JtUlhUVlp3ZVZadGREQldWa3AwWkVST1YwMXFSWGRXYWtGNFkyeGtjbHBHVms1V01VbzJWbXhTUjFsV1NYaGFTRVpXWWtkU2NGVnROVU5YVmxwSFZtMUdhazFXYkRSWk1GWmhZVVpKZVdGR1ZsWmlSa3BZVmpKNFlXTldSblJrUlRsVFRWVndObGRYZEdGaE1XUklVMjVLVDFadGVGaFpiR2h2VkVaU1ZsZHVaRmRpUm5CV1ZtMHhiMVV3TVVsUmEyaFhZV3RhZGxscVJscGtNREZYWVVaYWFHRjZWbGxXUm1NeFZEQTFSMVp1UmxSaGVteFVXV3hXWVZOR1pISmFTRTVZVW10d1Yxa3dVazlXTWtWNFkwaEtWV0V4Y0U5YVZscFRWMWRHUjFac2FGTk5WWEJZVmpGYVUxUXhWWGhYYkdScFVtMTRjVlZzWkZOV1JsSlhWMnQwYkdKR2NGbGFSVkpEVjBaSmQyTkdaRnBOUmxwNlZqSjRZVll4WkhOVmJHUk9ZbXMwTUZaVVFtRldNazUwVm10a1dHRjZWbFJaYlhSTFpHeGFkR05GVGxwV01VWTBWVEZvYjFaWFNuTlRia0pXWVd0dk1GWXhXbGRrUjFKSlYyMTRVMkpJUVhkWGJGWnFUbGRGZDAxV1drNVdSbHBZVlcweGIyVnNXblJOVlhSVVVteGFNVlZ0ZUdGaFJURlpVVzA1VjJKR1NraFpla1pyVjBaU2NscEhSbE5OTUVwWlYxZDRiMkl3TlZkWGJrNWFaV3RhVmxSWGRHRlRSbFY1VGxVNVYxSXdjRWxaVlZwdlZqSktkVkZyYUZWV1JWcG9XVEo0WVZkWFJrZFZiRTVPVmxoQ1NGWnRlR3RPUjFGNVVtdGFUbGRHU205VmJuQnpWMVphZEdWRmRGUlNiVkpZVjJ0Vk1XSkdTbk5UYm5CYVlUSlNkbFpVU2t0WFIwWkhZa1pvYVZJeFJqTldNVnBoWVRGSmVGcEdiR2xTTTBKVVZtcEdTMWRHV2tkWGJYUldUVmRTU0ZZeWRHOVVNVnB5VGxac1ZtRnJTak5WTVZwelZteHNObFpzYUdsU2JrSklWbXBLTkdJeFdsaFRiR3hvVW0xb1dGbHJXbmRWUmxsNFdrVmtWRkl3TlVkVWJHUnpWVEZrUmxOcmVGZGlWRVYzV1ZSQmVGTkdUbGxoUm1Sb1RXeEtiMVpYZUd0aU1rMTRWbGhrVjJKdFVsaFVWbHAzWlZaYWRHUkVRbGRXYTNBd1drVlNUMVl3TVhGU1dHUlhZV3RHTkZreWVHdGpiSEJIVm1zMVYwMVZiekpXYlhoVFVqRnNWMU5ZYUdGVFJWcFhXV3RrVTJOR1ZuUk9WVTVZVm14d1NGWnRNVWRoYXpGWFlrUlNXazFHV21oWlZWcEtaVmRHUjFac1dtbFNhM0JaVm1wS05GbFhUbGRTYmxKclVsUnNWRlJXVm5kT2JHUllaRWRHYUUxWFVrbFZNalZMVkRGYWRHVkdhRnBpUjJoMlZrVmFVMVpzWkhWYVJtUnBVbTVDVjFadE1IaGlNVlYzVFZWc1VtRXlhRmhaVjNSaFpHeHNjVkpzY0d0TlJFWllXVlZhWVdGSFJqWldiR3hYVW0xTmVGWkVRVEZTTVZwMVVteFNhR1Z0ZUZWWFYzaFhXVlpPUjFwSVNtRlRSVFZaVlcxMGQxWXhhM2RWYXpsWFRXdFdORmt3YUV0V1YwVjRZMFU1WVZac2NGUldNV1JIVWpGYWMyRkdUazVXV0VKWlZtcEdZVlV4VVhoV1dHaFlZa2RTY0ZVd1ZURlhWbXh6Vm0xR1dGSnNTbGhXTWpGSFZHeEtkR1JFVGxkaVdFMHhWbXBCZUZadFRrZFhiRnBwVjBWS1JWWXhXbUZUTVZsNFZHNU9VbUpIVWs5VmFrWkxVMVprVlZOcVVtaE5iRXBaVlRKMGIxVXlTa2hWYmtKV1lsaG9XRlJyV21Ga1IwNUdWRzFvVGxac1dUQldhMlF3WWpGVmVWSlliRlppVjJoWFdWZHpNV1JzYTNkWGJHUnJVbFJHUmxadGN6VlZNa3BKVVZoa1dHRXhXbWhXUkVaaFVtc3hXVk5yTlZkU2EzQllWMWQwYTJJeVRuTlhhMmhzVWpCYWNsVnFRbUZUUm1SeVYyNWtWMDFWY0ZwVlYzQkxWakpHY2xkdGFGZE5ha1pUV2xWYWQxTldUblJrUms1cFUwVktXbFl4WkRCWlYxRjRWMWhvV0dKSFVtaFZhMVpMWWpGU1YxZHJkR3hpUmxZMVZHeFdNRlpYU2tkalJXaFhUV3BHU0ZacVNrWmxSbHBaWVVad1RtSnRhRzlYVkVvMFdWWmtXRkpyWkZaaVJUVlBWbXhrTUU1V1duTlpNMmhQVW0xNFdGWXhhSE5XTWtweVkwWnNWMDFIYUVSV01WcGhaRWRXU1ZwR1pFNVhSVXBZVmpKMFZrMVhTa2RUYms1VVlXdGFXRmxzVWtkVFJscFZVMnQwYW1KRk5URlhhMXByWVZaa1IxTnNiRmROVm5CeVZtcEdTbVZHY0VsVGJHUnBVbFJXZDFacVFtRlRNV1JIVjJ0a1dHSllVbGRVVm1SVFUwWlplVTVXVGxWTlZuQjVWR3hhWVZkdFJYaGpSRTVYWWxob1dGcEZaRmRUUlRsWFdrZHNWMVp1UVRGV01WSkRXVlpWZUZkWWFGUmlhelZ4VlRCV2QxZEdiRmhrUjBacVlraENSMWRyVlRWV1JrbDRWMnRvVjFJelRYaFdha1poWkVkU1JWVnNaR2xYUjJoVlZsZHdTMU50VmxkV2JHeG9VbTFvYjFSWE1XOVdWbVJZVFZSQ2EwMVdjRmhaYTFwWFZsZEtSazVXYUZWV2JIQk1WbXBHV21WWFZraFNiV3hUWVROQ05sWlVTalJqTVd4WFYyeG9WbGRIVWxoWlYzUmhZVVpyZVdONlJsaFdNRnBJVmpKNGEySkhSWGhpZWtwWFlsaG9WRlZYTVZkU01XUjFWV3hXYUUxWVFscFhWM1JyWWpKT1IxWnVVbXhUUjFKUFdXdGtVMlZXV2xoa1JFSldUV3R3V0ZZeWRHOVdNVm8yVm10NFYwMUhVa3hXTUdSWFVtczVWMVpzWkd4aE1XOTVWbTF3UzA1R2JGaFZhMmhXWVRKU1dWbFljRmRYUm14eVYyeHdUbEp0VWxsYVJWcFBWMnhhYzJORmJGWmlSMmd6VmxjeFMyTnJOVmhTYkhCWFVsWnZlbFpyVm1GWGJWWllWbXRvVTJKR1NsUldhMVpoV1ZaWmVXUkhSbGROYTFwSlZtMDFTMWRHWkVoaFJtaFZWak5DV0ZSVVJsZE9iRXB6WTBkNFUyRjZWalpXTW5SaFlqSkdXRk5yYkZKaVIzaFlXV3hvVTFkR2NFVlNiR1JUVFZad1dsZHJXbTloUjFaMFpVaG9WMUp0VVhkWFZscFBVakZ3U1ZOc2FHbFdSM2hZVmtaYVlXUXhUa2RYV0d4cVVqQmFXRlJYZEhkV2JGWjBZMFU1VjJKR2NFZFdNalYzVmpBeFIyTkdhRnBsYTFvelZUQmtTMUl4Vm5OVWJHUlRZa2hCZVZadE1UUmhNRFZJVWxob1YxZEhlRlpaYTJSVFYwWnNkR1JIUmxaTlYzZ3dWRlphVDFack1WZFRiR2hZWVRGS1JGWkhjM2hXTWs1SFlrZEdWMVpzVlhoV2JYQkxVekZKZVZSclZsSmlSMUpZVkZSR1MwNXNXWGhYYlVaYVZtMVNTRlpYZUZkVk1rcElWV3M1Vm1GcldreFZNVnByVmxaT1dXRkdVazVXV0VKWlZtMHdNVlF5Um5OVGJsSldZa2RvVmxadGVHRk5NVlY1WlVkR2ExSXdOVWRXUnpGdlZHeGFjMkl6WkZkaVZFRjRWa1JHYTFOR1RuVlRhemxYWWxob2FGWnFRbTlSTVdSSFYyNUtXR0pIVW5GVVZtUlRUVlprY2xkdE9WWk5hM0JLVlZab2ExZEhTa2RYYldoYVZrVmFhRlp0YzNoWFZrNTBZMFpPVTFaWVFsbFdhMXByWkRGWmVGZHJaRmhpYTNCb1ZXeG9VMVpXVm5GU2JVWlVVbXh3TUZwVmFHdFdNREZGVVdwV1dHRnJOVE5XYWtwR1pVWk9jbUZHYUZkaVZrcFJWMWh3UzFReFNuTmpSV1JYWWxkNFdWVnNWbmRYYkZsNFdrUlNhVTFyYkRSWGExWnJWMFprU0dWSVNsWmlWRVpVV1dwR1UxZEhVa2RhUlRsVFlrZDNNVlpIZUdGaE1WcDBVMnhhYWxKWGVHaFdiR1JUWkd4YWNWTnJkRlJTYkZveFZqSjRhMVl4V25WUmJUbFhZV3RLY2xacVJrdGtSbEp5WVVkNFUySldTbmRXVnpBeFVXc3hSMWR1VGxoaVdGSlFWV3BDYzA1R1dYaGhTRTVYVWpCd1NWWlhlRmRYYkZsNllVUk9WMDFXY0dGYVJFcEhVbXhTYzFSc1RtbFNXRUV4Vm1wS01GbFdVWGhXV0dST1ZtMVNXVmxYZEdGWFJteHpZVWM1YTJKSGVGaFdNbmgzWWtkS1ZsZHJhRnBXVm5CeVZsUktTMVl4VGxWVGJHUlRZa2hDV0ZaR1dtdFViVlpIV2toT2FWSXllRlJVVkVKTFZsWmFkR05GWkZSTlZuQklWakowYTFsV1NrWlRiVVpYWWxoTmVGWXdXbUZqTWtaSlZHMW9UbFpYT0hsWFYzUmhZVEZhVjFkWWNGWmlSMmhXVm10V1lWWkdiRFpTYm1SVFlraENTRmRyVlRGVk1VcFhZMFZ3VjJKWVFreFVWVlV4VWpGd1NWVnNUbWxoTTBKYVYxY3dNVkV4WkVkaVNFcFlZbTFTVlZWdE1UQk9SbGw1WkVkMGFFMVZiRE5XTW5SdlZqRkplbFJZYUZkaGExcHlWVzE0VDJNeVJrZGFSMnhZVWxWd1NsWnRlRk5TTVZaMFZtdGtWR0pIZUc5VmJYaExZakZTV0UxWE9WZGlSMUpaVkZaU1EyRXdNVmRYYTJoWFlrZG9jbGRXV2t0T2JVcEhZa1prYVZkSFozcFdSbHBoWTIxUmVGZHVVbXRTYkZwdldsZDBZVmRzWkhOV2JUbHFUVlpzTTFSV2FFZFdNa1Y2WVVkR1dsWkZjRlJXUlZwWFkxWktkR1JIY0U1V01VbzJWMVJDYTJJeFVuTlhibEpyVFROQ1dGbHNhRk5qYkZKeVYyNU9WMDFYVW5wWGExcHZZVmRLUjJOSWFGZFdla0kwV1dwR2ExSXlUa2RoUjNSVFYwVktVRlpYTVRSa01sWnpWMnhvYTFKRlNsaFdiRkpIVmpGU2MxWnRPVmROVlc4eVZtMTRiMVl5U2xWU2EzaFdUVlp3U0ZreWN6VldNazVJWWtaT2FXRXdjRTlXYlRGM1VURnNWMkpHWkdGU1YyaFdXVlJHZDJOc1ZuRlRhbEpWVFZkNGVWWnRlSGRVYkVwMFZXeHNZVkpXY0ZCV01uaGhZekpPUm1KR1drNWhiRnBOVm10U1IyRXhTblJVYTJSb1VtNUNjRlZ0ZEhkWFZscFhWV3RrVmsxV2JEUlhhMmhUWVRGS2RGVnNhRnBXUlZvelZHdGFZVll4YTNwaFIyeE9WbTEzTVZaWGVHOWpNVlpIVkd0b2JGSnRlRmhaVjNNeFZrWndTR1ZIUm1wV2EzQXdXa1ZrTUZVeVJqWldXR2hYWWtkT05GUnJXbFpsUm1SelZteGthVkl4U2xsV1Z6RTBaREpHUjFwR1pHRlNiVkp4VkZaYWQwMVdWWGxsUnpsb1VqRmFNRnBWV25kV01WbDZVV3RTWVZKRldrdGFWV1JHWld4d1NGSnNVbE5XUmxwYVZteGplRTFIVFhkT1ZXUlhZbXhLY1ZWcVFtRlhSbEpZWkVaa1QxSnRkRE5aVldSSFYyeGFjbU5GWkZkTmJtaFFWMVphWVZkR1ZuSmxSbHBPVm01Q1VWZFVTbnBOVmxsNFkwVm9hVkpyTlhCWlZFSnlaREZhZEdORmRFOVNNRll6Vkd4V2EyRldTblJWYkdoYVZrVndWRll3V25Oa1IxWklVbTF3VjJKR2NEWldiR014VkRKR2MxZHVUbGhpYldoWFZtNXdWMk5zV25KWGJVWnFUVlZ3ZUZaWGVIZFdNVnB6WTBoc1dGWnNXbWhWZWtwT1pWWk9jbFpzYUdsVFJVcFpWbTB4TUdReFVsZFhia1pVWVd4S1lWWnNVbGRsYkZWNVRsWmthR0pGY0RGVlZ6VlBWMnhhUms1VlVsZFNWbkJ5V1hwR2EyUkhVa2RXYXpWWFZrWmFXbFpzWTNkTlZsVjVVbXhrVkdKcmNGQldNRlV4V1Zac2NscEhPV3RXYkVwWFZqSjRkMkpHU25SVmFrSldZbFJHZGxaSGVFdFNNV1J5WTBaa2FWSXdNVFJXYkZKSFZtMVdWMVJ1VmxWaVJrcHdXVlJDZDFkR1drZFdiVVpYWWxaYVNGbFVUbXRYUjBwR1RsWnNWbUpHU2xoV2FrWmhVMFV4VlZGc1ZtbFNiWGN5VjFaV1UxWXhXWGROVm1ob1VrVTFXRmxYZEhkVFJtdzJVbTEwV0ZadVFraFpWV1J6VlRBd2VXRklXbGRpVkVVd1dWUktTbVZXU25KYVIyeFRZa2hDYjFaWGVHOVZNV1JYVm01R1UySlZXbFZaYTJRd1RURlplVTVYZEdoU2Eyd3pWbTF3WVZac1dqWldibkJYWVd0d1IxcFZXbXRrUjBaSFkwWmtVMVp1UWs1V01XaDNVakZzV0ZWc1pGVmlhelZYV1d4a05GZFdWbkZUYlRsT1lrWnNOVnBWWkRCVWJFcHlUbGhzVlZac1duSlhWbHBMWkVkV1NWSnNXbWxTYTNBMlYxUkNZVlV4V1hoYVNGSlRZa1pLV0ZscmFFSmtNVnBJWlVkR1ZVMXJXa2xWYlhCaFZXMUdjMWRzYUZkaWJrSklWVEJhV21WVk1WWmtSazVPWVhwV1NsZFdWbUZoTVZWNVUydHNVbUpVYkZsV2ExWmhZVVphUlZOc1RsZE5WbG94VmtkNGIyRldTbFZXYmxwWVlrZFJkMVp0TVZKbFJtUjFVbXhTYUdFd2NIWlhWbWgzVmpGa1IxZFliR3hTTUZwV1dXdGFkMWRXY0ZaWGJYUllZbFZXTlZaV1VrTlhSbHB6WTBkb1lWSlhVbGhWYWtaclkyczFWMXBIYkZSU1ZYQktWbTB4ZDFNd05VaFZXR3hVWVRKU1dWWXdaRk5qVmxaeldrYzVWMDFXY0hoV1J6QTFWakZLYzJORmJHRldWbkF6V1d0YVMyTnJOVmxoUm1SVFRUSm9lVmRXVmxabFJscDBWR3RhVjJKSFVsUlphMXAzWWpGa1YxVnJaRlZOVld3MFZrYzFWMVpYU2toaFNFSldZa1phTTFZeFdtRmpWa1owWkVkc1RsWXhTbGxXYWtvd1lURmtjazFJYkdoU2EwcFhXV3hvYjJGR1dYZFhiVVpyVWpBMVNWVnRlR0ZVYlVWNlVXMUdWMkpIVFhoVlZFWmhWakZrZFZSdGNGTldNbWhYVm0xMFYxbFZNSGhXYmxKc1VqTlNjbFZzVW5OWFZteFdWMnM1YUZack5VZFZNbmh6VmpKRmVWVlVRbGRoYTFwVFdsVmFkMUp0UmtkVWJXeG9UVEJLVjFZeFkzZE5Wa1Y0VjFob2FWSnNXbFJaYlRGVFZsWldkR1ZJVGs1TlZtdzFWR3hrTUZack1YSmpSbVJWWWtaYWRsWnFSa3RPYkVwMVkwWndWMkpJUW05WFZFbzBZVEZhVjFSdVRtRlNNbmhaVlcxMGQyUnNXWGhhU0dSVVRWWmFNRlp0ZEd0V01rcElaVWM1Vm1GcmJ6QldiRnBYWXpKR1JsUnNXbE5pU0VGM1ZrWmFVMVV4WkhOWFdHUlBWbTFvWVZSVlduZGtiR3h5VjJ0d2EwMVhVbnBYYTFwaFlWWmtTR0ZIT1ZkU2JIQm9XVEl4VW1WR1pITldiR1JwVmpKb2QxWlhlR3ROTWxaeldrWldVbUpIVW1GV2JYaHpUa1paZVU1V1RtaFNhMncxV1ZWa1IxWXlTa2RqUkU1WVZteHdNMVl3VlhoV2JIQkhWR3hrYVZKdE9UTldiR040VGtkRmVWTnJhRk5YUjJod1dsZDBkMWRHVWxkYVJ6bE9UVlpaTWxWdGVFdGlSa3AxVVd0b1dsWldjRmhaVlZWNFpGZEdSMVZzYUZkTk1taDVWa2QwWVZsV1dYaFhibFpWWWtkb2NGbFVUa05sYkZwMFRVaG9WazFYVWtoV01XaHpWR3hhUmxOc1dsVldiRnA2Vkd0YVdtVlhVa2xVYkdST1lUTkNWMVp0TVRSVk1XUnpWMjVPYWxKclNsZFpiR2hPWlVaWmVGZHJkR3BOV0VKSFZHeGFUMVJ0U2xoaFJXUlhZV3R2ZDFaVVJrcGxWbEpaWWtaV2FXSkZjRlZYVmxKSFpESkdSMVp1VGxaaWF6VnhWVzE0ZDJWc1dYbE9WM1JZVWpCd1NWWlhOWGRXTWtwVlVWUkdXbFpzVmpSWk1qRlBVbTFLUjFkck5XbGlWMmQ1VmpGa01GbFdVWGhVYkdSVFlteEtWRmxyV21GWFJteHpWMnQwVG1KR2NFaFdWM1JyWVcxS1YxSnFVbHBOUmxwb1dWUkdTMk14VG5OaFJuQlhVbFJXUlZaSGRHRlpWMDVYVkd4c2FGSnJOVTlXYlhSM1RsWmFSMWR0Um1oTmExcDZWVEp3WVdGV1NuUmhSbWhhVmtWYWFGWkZXbkpsVjFaSFdrVTVhVkpVVmpaV01uUmhWREZTZEZKcVdsZGhNbWhaVm1wT1UyRkdiRlZUYTJSWVVtczFlbGRyV2xOaFZrcFhZMFpzVjJKWVFsQlpha3BUWXpKS1NWSnNTbGhTTW1oVlZrWmFhMVV5Vm5OaVJscGhVMGRTVjFSWGRGcE5iRnAwVGxoT1YwMVZjSHBaTUdoTFZsZEZlR05JU2xwbGExcHlXVEo0ZDFJeFpIUmhSVFZUVW14dmVWWnFSbXROUmxsNVZGaGtUbE5IYUZsV01HUTBZMVpXY1ZGdFJsaFNiSEI0VlZkNGExUXhXblJsUm1SWFlsaG9VRll3WkV0U01rNUhZa1prVjAweWFFVldiWGhyVXpGa1dGSnJaR2hTTUZwVVdXdG9RbVZzV2xoalJYUlZUVlZzTlZWdGRHdFdWMHBJVld4U1YySkhVWHBVVjNoaFpFZE9SbHBHV2s1V1Zsa3hWbGQ0YjJJeFdrZGFSV2hzVW0xb1lWbHNhRk5OTVZwV1YyMUdhazFZUWtaV1YzaGhWR3haZW1GRVdsZE5ibEp4Vkd4a1IyTXhaSFZXYkVwcFVqTm9iMVp0ZUdGWGJWRjRWMnRvYWsweWFGbFZiWGhoWld4c1ZsZHVaRmROVm5CNlZtMXdVMVl5UlhsVlZFSldUV3BHVTFwRVFURldNV1IwWWtaT2FWTkZTak5XYlRFd1dWWmtkRlp1VGxoaWEzQlhXVlJLVTFac1VsZFdibVJzWWtad1NWUnNXbXRXTVZsM1kwVnNWMVl6YUhaV2FrcExWMWRHUlZSc1pGZGlTRUo1Vm1wR2ExUXhTblJWYTJSWVlsZDRXRmxyYUVKTmJGbDRWV3RPVjAxWGVGaFdWbWh2VjBaa1NWRnRPVlppYmtKNldWVmFZV05XVW5SUFYyaFRZbXRLUjFaWE1IaFNNa1owVTJ0b1ZtRnJTbGRaYkdodllVWmFTRTFWZEZOTmF6VkdWbTE0YTFVd01IbGhSemxYVFZad2FGWlhNVmRTTVhCSlZHMW9VMDF0YUZWV2JYUnJUa1paZUZkdVVrOVhSMUpVV1Zod1IxTkdhM2RYYlRscFVtczFSMVJzYUVkV01rcFpWRmhvVlZaV2NGTmFWVnAzVTBVNVdHRkdaR2hOTUVreFZqRlNRMWxYU1hoWFdHeFVZVEpvVjFsWGVIZFdiRnAwVFZaT1ZWSnNWak5XTW5NMVlXMUtWbGRyYUZkTmJtaHlWbFJHYTFKc1RuTmlSbVJPVmpGR00xWXhXbUZVYlZaWFZXNVdWV0pIYUhCVmJUVkRWMnhrV0dWR1pGcFdiSEJJVmxkNGExWXhXa1pYYms1V1lsaG9hRll4V25KbGJVNUhXa1prVGxaWVFqVlhWRUpoWVRGa2NrMVZhR2hTTW1oWVdWZDBZVlJHVm5SbFJUbHFUVlphZWxkcldtdFZNV1JHVTJ4V1YwMXVhRmhaVkVaT1pVWk9XV0ZHYUdsaVJYQlZWMWQ0YjJJeVNYaFZiRnBvVWxVMVVGVnRlSGRsYkdSeVlVZDBWbUY2UmxoWk1HaHpWbFphYzFkdVNsZGlWRVpNV1RJeFQxTkZPVmRYYld4VFlrWlpNRll4WkhkU01WbDVWRmhvVjJKc1dsWlphMVV4WTBaV2RFNVZUbGhpUm5CSldsVmtNRlJzU25SVmEyeFdUVzVTY2xsWGVFdFhSMVpJVW14a2FWSnVRbWhYYTFKSFdWZFNSazFXV210U2JWSllXV3RvUW1WR1dsVlRhbEpYVFZac05GVXllR3RoYkVwelYyeG9XbFl6VW1oWk1uaGhVbFpLY21SSGNHaGxiWGhaVmpKMGEyUXhWWGROV0ZKb1UwaENXVlp0ZUV0VFJuQkZVbTEwVTAxWFVscFpWVnBoWVVkV2RHVkliRmRTYkhCb1dYcEJNVkl4WkhOYVIyaFRaVzE0V1ZaWGNFTlpWMVp6WVROa1dHRjZiRmxaYTFwelRteGFXR1JFVWxkTmEzQklXVEJrYjFkdFZuSlhia3BoVW14d1VGa3ljekZXTVZKMFlrWmthRTFxYUROV2JURTBXVmRGZVZWWWFGZFhSMmhaVmpCa2IxWldiSEpYYlVaWFVtMTRlVmRyVWxOWFJrcHpVMnhzVldKR1ZURldSRVpMWXpKT1JWRnNWbGRpU0VKNVYxWmplRk14VGtkV2JrWlRZa1p3Y0ZZd1pHOWxWbHB6Vld0MFZFMVZiRFZXUjNSclZqSktTRlZ0T1ZWV00wMTNWRlZhWVdSSFRrWmtSbFpwVm14d1NsWnJaREJaVmxsNVUydG9hRk5GU2xkWmExcExWMFpaZUZkdFJsaFNNRFZIVjJ0YVUxUnNXbk5qUkZwWFlXdHJlRlpVU2tabFJrNVpXa1pvYVZKc2NGZFdiWGhoVXpGT1IxWnVSbE5pUlRWeFZGWmFkMDFXV2tobFIwWm9WbXh3V2xWWGRIZFhSbHB6VjIxb1dtRnJXbUZhVmxwTFYxZEdTR05HVGxoU01taFlWbTB4TUZZeGJGaFNhMlJvVFRKb1dWbFljSE5YVmxwMFRsVk9VMDFXU25wV01uTTFWbGRLUm1ORmFGZE5ibEl6Vm1wS1IyTnRTWHBhUm1oWFlsWktVRmRzVm1GV01XUllVbXRrVjJKWGFFOVdNRlpMVmpGWmVGcEVRbHBXYlhoWVYydFdhMVl5U25OVGJrNVdZa2RvVkZZd1dsZGtSVFZXVkd4T2FWSnNiM2RYYkZaclVqSkdSazFWVmxOaVIxSmhWRlZhZDJGR1duUmxSMFpQWWtWd2VGWkhlR3RXTVVwWlVXdHNWMUo2UlRCWFZtUk9aVVphZFZSdFJsTmhlbFpRVmtaYVYyUnRWbGRYYms1WVlrVTFWRlJXWkRSWFJscElaRWQwVjJKVmNIbFdNbmh6VjIxRmVHTkVUbHBOUm5CNldYcEdhMk50VWtkaFJrNXBVMFZLU2xadE1IaE9SMFY0VjFoc1ZHSkhVbFJaVjNoTFdWWmFjbFpVUm1waVJtd3pWMnRXYTFReVNsWmpSV2hZWVRGd00xWXdXazlTYkU1ellrWmtWMUpYT0hkV2JYQkhZVEZPUjFkdVNtRlNiRnB3Vm1wS2IyUXhXblJOVkZKclRVUldlbFl5ZUZkV1IwcDBWV3hhVlZac2NIcFVhMXBhWlZkU1NGSnNXazVoTVhBMVZrZDRZVmxXV1hsVGEyaFdZa1pLV0Zac1duZFhSbXQ0VjJ0MGFrMVdTakJaTUdSelZURmFSMWRVU2xkaVdHaHlWR3RrUm1WR1pGbGhSbWhvVFd4S1dsZFdVa2RaVm1SSFlrWm9hMU5GY0hOVmJUVkRVbXhXZEdWSFJtbFNiSEI2VmpKNGQxZHNXbGRqU0ZwWFRVWndTMXBXWkVkU01rcEhXa2RzV0ZKcmNGcFdiR2gzVXpGUmVGZFlhRmhpYkZwWFdWaHdWMWRHYkZsalJtUllVbXh3U0ZZeU1VZFdSVEZ6VjJ4b1dtRXhjR2hXYWtwSFRtMUtSMkpHV21sWFJrbDZWa1pXWVZsV1pFaFZhMmhUWWtkU1QxWnRNRFJsVmxwMFRVUkdWRTFXYkRWVmJUVkxWVEpHYzFOc2FGcFdNMUpvV1ZWYVdtVkdaSFZhUms1T1lYcFdTRlpIZUdGVU1rWllVbGhrYVdWcldsaFpiRkpIVFRGV2NWSnVUbGROVmxwYVdWVmFiMkZYUmpaV2JGcFlWbnBGTUZkV1pFZFNNVnAxVldzNVYxWlVWbGRXUmxwaFdWZFdWMWR1VWs1V1YxSlhWRlZTUjFkR2EzZGhTRTVYVFVSR2VGVldVa2RYYkZwR1VtcFNWMDFHY0ZoWk1qRkxVakZ3U0dKR1pGTmlTRUpQVm0wd2VHUXhTWGhpUm1SVVltdHdVRlp0TVZOWFZteHlWMjFHV0ZKdGVIbFpWVlpQVmxaYWMyTkVRbUZTVjFKSVdWUkJlRlp0VGtsalJtUnBWa1phVVZadGVHdFRNV1JYVm01S1VGWnRVbTlaV0hCWFRXeGFjVkZ0Um1oTlYxSkpWbGQwYTFsV1NYcFZhemxYWWxob1lWUldXbUZXVms1VlVteGFUbFp1UWpaV01uUlhZekZXZEZOcmFHaFNiVkpoV1d0YVMxTkdjRWhsUms1WFZtdHdNRlZ0ZUU5V01rVjZVVmhvVjJFeVRqUmFSRXBIVTBaYWRWTnNhR2xTTTJoWlYxZDRVMUV3TlVkalJWWlVZVE5TVlZWdGN6RmxWbVJ5V2toa1ZrMXJWalJaTUZwelZqSktWVlpxVGxkaGEwWXpXbFZhWVdNeFduTlZiV2hPVFZWd05GWnJXbUZpTVVWNFUxaG9XRmRIZUhOVmFrSmhZakZXYzFWclpGUmlSbHBaVkd4b2ExZEdTbk5qUkVKYVZsWktVRlp0ZUdGU2JFcFpZVVphYUdFelFrMVdWM2hoWVRKTmVGZHVVbWxTYlZKVVZGUktiMWRzV25SbFIzUnJUVlZzTkZscldtRlViRnBZVlc1Q1ZtRXhjRE5XYlhoell6SkdSMVJzYUZkaVdHZzJWbTB3TVdFeFdrZFRibEpzVW01Q1lWUlZXbUZWUmxsNVpVZEdhbUpWTlVoWlZWcDNWR3hKZVdGSE9WZGlXR2h5VlhwR1NtVkdaSFZTYkZwcFVtNUNVRlp0TURGUk1XUlhXa1pXVkZkSGFGWlVWbFp6VGtaYVNFNVdUbWxTYTJ3MVdWVlZOVll3TVVkWGEyaFZWa1ZhYUZwRlpGZFNNVkp6VkdzMVYySllZM2RXYlhocVRWWlZlRmR1VG1GU1YyaHpWVzB4VTFsV1duSldibVJYVW0xNFYxWXllRTlXTVZweVRsUkNWVTFXY0doV2FrcExVMVpHY1ZWc1pGZGlTRUpWVmxkd1IxbFdXbkpOVm1SaFVtMW9jRmxzYUc5WFZtUllaRWQwYVUxc1NucFdNblJYVmtkRmVsVnNVbFZXTTFJelZXMTRXbVZYVmtsYVJsWnBVbGhDTmxkVVFtcE9WbGw1VWxob1ZHRXdOV2hXYkZwM1ZFWlpkMWRyT1dwaVNFSklXVlZrYzFVd01WWmpSbkJYVFc1b2NsUnJXbk5XTVdSeldrWm9hVkpzY0ZaWFZtUTBVekZaZUdKSVRsaGhNbEpRVm0xNGQxZFdjRVphUkVKWVlrWndlVmxyVWxkWGJGcFhWbFJHVjAxcVJrZGFWV1JQVWxaU2MxcEdUazVOYldoMlZqSjBWMVp0VmtkVWJHaFRZVEZ3VUZadGN6RlVNVlYzVm10MFZHSkdjREJhUldSSFlWVXhjbUpFVWxkTlYyaDZWbXRrUzJOck5WZGlSbkJvVFZoQmVsWnRNVFJaVjAxNFkwVm9VRlp0VWxSWmEyaERUa1phV0UxSWFFNVNNRnA2VmpJMVMxZEhTa2RqUm1oYVlrZG9kbFl3V21GV1ZrNXlaRVpTVjJFeGIzZFdWekUwWVRGWmVWTnNaRk5YUjFKWVZtMTRTMU5HWkZkWGEzUnFZWHBHV0ZkclpFZFZNa3BZWVVoYVdGWnNTa2hhUkVaclZqRmtjMkZIZEZOaVZrcFdWMWQ0WVZJd05VZFhXR3hQVm1zMVZsbHJXbmRXYkd4eVlVVmtXR0pIVWtwVlZ6VjNWakpHY2xkcVRsZGlXR2h5V2tWa1UxSXhjRVpPVjJ4VFltdEZlRlp0TVhkVE1EVkhWRmhvV0ZkSGFHaFZiR1EwVlRGc1ZWTnRPVmhTYlhoWldrVm9hMVl4U25OalNHaFdZbGhvY2xZd1dtRmtWa1p5WWtkR1UxWnVRbEZYVmxwaFZERktjMVJ1UmxkaVIxSndWV3BHUm1ReFduTlZhM1JWWWxaYVNGWnROVTlaVmtwMFlVaENXbGRJUWxoWmFrWmhWMGRTUjFwR1VrNVdiWGN3Vm0wd01WVXlSbkpOU0d4b1VtdEtWMWxzYUc5Tk1WSldWMnhPVjJKR1dubFhhMXByVkd4YWRWRnNaRmRXZWtWM1drUkdXbVZHWkZsalIyaFVVbGhDV1ZaR1ZtdFZNVTVIWVROc2JGSllVbGhXYlhSM1pXeGtjbGRyT1ZkTmEzQjVWVEkxWVZZeVNsbFJhMUpZVm0xU1UxcFZXazlYVjBaSFZHMXNhR1ZzV2xsV01WcHZaREZaZUZwRlpHbFRSa3B5Vld4a1UxVkdXblJsU0dST1VtNUNSMVl5Y3pWV2JVWTJVbXRhVm1KWVVuWldha0Y0VjBkR1NXTkdaR2hOV0VKNVZsUkdZVkl5VWxkU2JrNVlZbGQ0VkZsdGRFdGtiRmw0V2toa1UwMVhlRmxXUjNoclZtMUtjMU5zUmxkaGEyOHdWa1JHWVdSSFZrbGFSVGxYWWtkM01WZHJWbXBPVmxwV1RWaEtXR0p0ZUZaV2JYaDNaR3hzY2xkcmRHdFNNVnBJVmpKNGQyRkZNWE5UYWtwWFZqTlNhRmw2UmxwbFJuQkpVMjEwVTAweFNsbFhWbEpIWkcxV1IxZHNhRTVXUmtwaFZtcENkMU5XVm5OaFJ6bG9Za1Z3UjFrd1dtOVdNa1p5VGxoYVdsWldjRmhaTVZwTFpFZFNSMkZHVG1sU1dFRXhWbTF3UzJWck5WZFhXR2hZWVRKU1dWbHJhRU5YUmxweFZHMDVWMUpzY0ZsVVZscExZa1pLZEZWcVJsWk5ibWhvV1ZWa1YyUkhWa2xpUm1SVFlsWkpNbFpHV210V01WbDRWbTVPWVZKdFVuQldhMlEwVjFaYVdHTkZUbXROVjFKNldXdGFZVmRIU2toVmJHaFhZbGhvTTFSVldtRlhSMVpIVkd4d1YyRXpRa2hXYWtvMFlqRnNWMU5zWkZkWFIyaFlWRlZrVTFaR1ZuUmpla1pYWVhwV1dGZHJaRzlVYXpGR1kwaGFWMkpZUWtoV1ZFWkdaVVprZFZOck9WZGlWa3B2VmxSQ1lWTXhXa2RpUm1oc1UwZFNXRlZ0TVRSbFZsbDVUbGQwV0dKR2NIcFZNbmhoVmpGSmVsVnNRbGROUm5CTVdYcEtUMUpzWkhOWGJXeFlVbXRaZWxadGRGTlRNVTE0VTFob1ZXSnJXbFJaYTFwM1YwWndXR1JIUms5aVJuQXdXa1ZrUjFaRk1WaFZiR2hXWWxSV1RGWlZXbUZrUjBaSFlVWndhRTF0YUVWWGJGcGhXVlpPU0ZWcmFHdFNiVkpQVm0weE0wMUdXblJOUkVaVVRXdGFTRlV4YUhOaVJrcHpWMnhrV21FeGNFeFdNRnAzVm14a2RHUkdaRTVXYkhBMVZrUkdhMk14VW5SVGExcFlWa1ZLV1ZacVRsTmtiRlkyVTJ0a1UwMVZOWHBaYTFwaFlWWktkVkZzYkZoV2JWRjNWWHBLUjFJeFpGbGhSbWhwWWxaS1dWZFhlRmRaVms1elYydG9iRkl6VWxkVVZWSkhVMnhXV0dWSE9WZE5WV3cyV1ZWYWExWlhTa2RqUjJoaFVsWndURll4WkVkU01YQklZVWRzVTFkRlNsbFdha1pyVGtkSmVWTllhR2xTYlZKeFZXMHhiMVF4V25OVmJrNVhVbTE0ZVZkcldrOWlSbHB6VW1wU1YySkdTa2hXYlhONFZtMUtSVmRzY0ZkV2JrSXlWbTF3UzFNeFpGaFNhMnhUWWtaYVdGbHJhRU5YUm1SelZtMUdWMDFyTVRSWk1GWnJXVlpKZVdGSVFsWk5SbHBNVm14YVdtVkdjRVZWYkZwT1ZtMTNNRlpxU2pSaE1XUklVMjVLVDFadGFGaFVWV1JUWkd4YVJWSnNUbGROV0VKSVZrY3hORlV5U2tkaU0yUlhVbXhhVkZacVJtRldhekZYV2tkd1ZGSXphRmxXUm1NeFlqQXdlRmR1UmxOaVNFSnpXV3RhUzJWR1dsaGxSM1JvVWpCV05sVlhjM2hYUjBWNFYyMW9WMkZyV25KV01GcFRZMnh3U0ZKc1RtaGxiRm96Vm0weGQxTXlSWGRPV0U1WVlteEtjbFZ0Y3pGV1JsSllZek5vVDFac2NFbFViRll3VmxkS1IyTkVRbGRXTTJoMlZqSXhTMU5IUmtaVmJIQnNZVEZ3TmxkVVNqUmhNbEpYWTBWa1dHSkhVbkJWTUZaTFdWWmFjbHBFVW1sTmExWTBWako0WVZSc1pFWmpSa0pYWWtkUk1GWnFSbE5YUlRWWFZHMXdhVkl6YUZwWGJGWlhUVVpaZDAxV2FGWmhhMHBXVkZaYWQyTnNiRlphUldSUFlrWndlRlV5ZUc5V01EQjNVMnRzV0ZkSVFreFdWRVpMWTJzeFYxcEhiRk5pUm5CM1ZtcENWMU14VmtkWGJsSnFVbGRTVlZSVlVsZFRSbGw1VGxWMFdHSldXbmxXTW5oUFZsWlplbFZ0YUZkTlJuQlhXbFprVjFOV1VuUmhSazVvVFRCSk1WWnJaRFJaVjAxNFdraFNWR0pHV2xoWlZFWkxWMFpzVlZKdVpFNU5WbHA2VmpKME1HRnJNVmxSYTJSVlRWZFNlbFpVUm1Ga1ZrWnpZVVprYVZKdVFuaFhiRlpyVlcxV1IxZHNiR2xTYXpWdldXdG9RMVpXV25GUmJUbFNUVmRTU0ZadE5VZFdWMHBHVGxoS1dtRXhjR2hXYlhoWFpFVXhWbHBHV2s1U1JWcGFWbXhqTVdReFdYbFRiR3hvVWpKb1lWWnRNVk5VUmxweFVtczVhazFyV2toWGExcFBZVlpLZFZGc2NGZGlWRUl6V2xWYVYyUkdXbkpoUms1WVUwVktiMVpYTUhoaU1rbDRZMFpvYkZJd1duTldiWGgzVTBaWmVXVkhSbFZpUm5CNldXdFNVMVl4V25SaFNGcFhZV3R3U0ZsNlJrOWpNa1pIVm14a2FWWnJjRlpXYkZKRFdWWmFkRlpzYUZaaE1sSm9WVzB4VTJOR1ZuUk9WVXByVFZad2VsZFljRWRXUlRGWFkwaHNWVlp0YUZoWlZWcExZMnMxV0dGR1dtaE5WbTk2Vm0xMFlWWXlUbGRUYmxaaFVteEtWRlJWYUVOVFZsbDVaRVphVGxZd1dsbFZNbmh2WVVaS1YyTkdhRnBpUjJoRVZYcEdVMVl4Y0VkVGJYaFRZa2hDWVZkWGRHRlpWbVJIVTFoc2FGSnVRbGhaVjNSTFkyeFNjbGR0UmxOTlYxSXhWVEo0YTJGRk1IaFRibWhYWWxSRk1GZFdWWGhTTVZaeldrWm9hR1Z0ZUZsWFZtaDNVakZrUjFaWWJFOVhSVFZaV1d0YWQxZEdXWGxsUlU1WFRVUkdTRmt3VmpSWlZrcHpZMFZvV2sxdWFETlZha3BQVTBkR1JrNVdaR2xoTUd0NFZtMXdSMWxXVlhoU2JsSldWMGQ0V0ZsclpGTlhSbXgwWkVoa1ZsWnNjSGhWVnpGSFYwWktjMU5zV2xaV2JXaDJWa1JHUzJSR1ZuTmhSbVJPWVd0YVNWWnRNWHBsUmxsNVUydFdWbUpIVW5CV2ExcGhWMVprVjFwRVVsUk5WbkJaVlRKMGEyRkdTblJWYlRsVlZtMW9SRlpGV21GU01XUjBVbXh3VjJFeWR6QldNblJ2VlRGVmVWTnNhR2hTVkd4WVdXeFNSbVZzVWxkWGJVWllVakZhU1ZReFpIZFViVVY2VVd0c1YxWkZhM2hWZWtwSFl6Rk9kVlJzYUdsU01taG9WMVpTUjJReFdYaGpSbHBZWWtkU1dGWnRkSGROUm5CR1draGtWMDFyVmpSWmFrNXZWakpGZVZWVVFsWmxhM0JJVm1wR2EyTXhXbk5hUjJoT1RVVndXbFl4V2xOVE1WVjNUbGhPVm1KSFVsbFphMXAzWXpGV2RHTjZSbXhpUm5Bd1dsVlZOVll3TVZaalJuQldWak5vZWxZd1dtRmtSbFp4VjJ4V1YySkdXWHBYYkZaaFdWZFNWMVp1VW1wU00yaHZWRlZvUTA1V1duSlhiR1JXVFdzeE5GZHJWbXRYUjBwelUyNU9WbUZyU21oWmFrWmhZMVpHZFZwR1RrNVdia0YzVjFSQ1ZrNVdaRWRUYms1cVVsZFNWMVJYY0ZkVVJscDBUVlZrYW1KSFVucFZWM2gzVkcxS2NrMVVVbGRpVkVJMFZYcEdTbVZHVW5WVmJXeFRZbFpLVUZkWGVHdGlNV1JIVjI1U1RsTkhhRTlWYlRFMFYwWmFSMkZIZEZWaVJUVkpXVlZrYjFadFNsVlNiRkpYVFVad2VscEZaRk5UVm5CSFZtczFWMkpJUVRCV2JGcGhWVEZKZUZkclpGaGlhelZaV1ZkMFMyRkdWbk5hUnpscVlrWndlbFpzYUc5V01rWTJWbXhrV0dFeGNHaFdSekZIWTJ4S1dXRkdaR2xXUlZreVYyeFdZVmR0VmtkVmJsWlZZa1p3Y0Zac1duZFdWbHBZWlVkR2EwMUVWbnBXTWpWVFZHeE9TR0ZHVWxWV1ZrcFlXbGQ0VjJSRk5WZFViV2hwVWxoQ05WWkhlRlpPVmxwMFUyeFdWMkV4U2xoVmJYaDNZVVpyZVdWSVpGTldhMW93V1d0Vk1WWXhXbk5oTTJoWFlrZE9ORlJWWkVabFJtUnpZVVpTYUUxc1NscFhWM1JyVlRGc1YySklUbFpoTWxKWVZXMHhVMWRHV1hsTlZXUm9ZWHBHV2xWWGRHRldNVmw2WVVaU1YxSXphR2haZWtwUFVqRndSMXBHWkdsV2ExbDZWakZhVTFNeFNYaGFSV1JWWW10d1dWbFljSE5YUm14elYydDBXRlpzY0ZsWk1GVTFWbXN4VjFOcmFGaGhNWEJ5Vm1wR2ExTkhSa2RpUmxwb1lUQndiMVpYY0VkWGJWWllWbXRvVTJKSFVrOVpWRTVEVjJ4WmVXTkZPV3ROVm13MVZXeG9jMVp0Um5OalIyaFhZa1p3TTFreWVHRmpWa3B6V2tkMFYyRXpRalpXYWtsNFl6RlZlVk5yYkZKaVJWcFlXVlJHZDFaR1ZsVlNhelZyVFVSV1dGZHJXbTloUlRGelUyeHNXRll6YUhaV1ZFWmhWakZXYzJGSGRGTk5SbkI2VjFkMFlXUXhUa2RpUmxwb1VqTlNXRlJXVm5OTk1WbDVUbGhPVjFZd2NFbFpWVlp2VmpBeGRXRkhhRlppV0doeVdUSXhWMUl4WkhSaVJrNXBZVEJyZVZadGRHcGxSVFZIVTFob1lWSnRhRlJaVkVwVFYwWnNjbFpVUmxWTlZuQjZWakkxUzJKR1duTmpTR2hXVFc1Q1JGbFdWWGhqYXpGVlZXeGthVkl5YURKV2JYUnJVekZKZVZSclpGSmlSMUp2VkZab1FtVnNXbkZSYlVaWFRXeEtTVlp0ZEd0aGJFbDZWV3M1VjJKWVVqTldha1poVmxaT2NWVnNVazVoTTBKS1ZsUktNRmxXVVhoYVJXaHNVbTFvWVZsclpHOWtiRnBHVjIxR1ZGSXdNVFpaVlZwUFZqSktTVkZxV2xkV2JWRXdXVlJHYTFJeFVuSlhiRkpwVWxad1dsWnRNVFJUTVVWNFkwVldWR0pIVWxoVVZscGhUVlphZEdWR1RtaFdhM0F4VlZjMWExZEdXbk5UYTFKaFVrVndVMXBWV25kU01YQkhWMjFvYkdKWWFGbFdhMXByVGtaTmVGUnJaRmhpYkVwelZXMHhVMWRHV25GUmJIQk9Za2Q0ZVZZeU1VZFhSMHBXVm1wU1YySllRbFJXYkdSTFYxZEdTVk5zY0U1aWJXaFpWMVJLZWs1V1pFaFNhMmhwVW0xU1dGbHJaREJOTVZwMFpVWk9WRTFFUmtoV01XaHZXVlpPUjFOc2FGcGlXRkl6Vm10YWMxZEhWa1prUm1oVFlrWndObFl5ZEdGVU1WcHlUVlpzVW1KSGVHaFdiR1J2WTJ4YWNsZHNjR3ROYXpWSFdWVmFhMVV3TUhsaFJrWlhZbGhDU0ZkV1drcGxSbVJ6WWtkc1UySldTbmRXYWtKaFV6SkplRmR1VW1wU1ZYQnpWVzEwZDJWV1VsZFdiazVvVm10d2Vsa3dXbk5XYXpGSFYydDRWMkpZYUhKV2FrWlhZMnh3UjJOR1pHbFNiR3QzVm0xNGEwNUdXWGhXYms1WVlURndXVmxyV25kV2JGcDBaVWhrV0ZKc1NqQmFWV2hMWVRBeFdWRnJXbFpXTTJob1ZrZDRZVmRIVVhwalJtaFhVbFZ3V1ZkclVrZGhNVTVIVTJ4c2FGSnNTbkJWYkZaM1YxWmtXR1JIUm10TmF6VjZWbXhvYjFkSFJYbFZia1pWVm14YWFGcFhlSE5XYkdSMFpFWldhR1ZyV2tkV2JGcHZZVEZaZVZOc1ZsTldSVXBoVm10V1lWVXhjRVZSVkVaWVZteEtlbGxWWkhOaFJUQjNVMnhPVjJKVVFqUmFWM040VjBaU1dXRkhiRk5pUm5CVVYxY3dlRlV4VVhoWGJsSnNVMGRTVlZadE5VTlNNV1JaWTBaa1YySlZXVEpWYlRWelZqQXhkVlZ1V2xkaGExcExXbGN4UjFJeVJrZGFSMnhYVWxad1RsWXlkRmRaVmxsNVZXdGtWR0pyTldoVmFrbzBWa1pTVjFac1pFNU5WbkI2V1ZWb2ExVXdNVmhsUm1oV1RXNW9jbFpVU2t0amJHUnpWR3h3YUUxc1NqSldiWFJoVlRGYWMxcElWbUZTYldoVVdXdG9RMUl4V2xoTlZGSm9UVlpHTkZVeU5VOWhWa3BHVGxaYVYySlVSblpXYTFwelkyeGtjbVJHYUZOTlJuQktWMVpXWVdFeVJsZFRibFpTWVhwR1dGbHNhRk5oUm1SWFYyczVWRkpzY0hsWGEyUjNWVEF3ZUZOc1FsaFdiV2d6Vm1wR1QyTXhjRWRoUjNSVFRVWndXVlpHV21Gak1EVkhWMWhzVDFaWVVtOVphMVozVjBaWmVXVklUbGhpUm5CSFZqSXhiMVl3TVVkalNIQlZZbGhvVUZreWN6VldNVkp5VGxaa2FFMHdSWGxXYWtaaFZqSkZlVlJZYUZkWFIyaFpXVzEwZDJOV1ZuVmpTRTVZVW14YU1GcFZWakJWTVVwelYxUktWazF1YUV4WmExcExaRVpXYzJOR2NGZFdia0l5VjFaYVlXRXhTbk5VYms1U1lrZFNjRll3Vmt0VFZscFpZMFZrYUUxVmJEVlZiR2gzV1ZaS2RHRklRbHBYU0VKWVZqRmFZVmRGTVZWVmJYQk9Va1phV1ZacVNqUmlNa3BIVTJ4c1ZtSkhhRlpXYlhoM1RURldjVkpzV214V01VcEpWREZhYjJGSFZuSlhhMnhZVmtWS2FGVlVSbHBrTURGV1lVWmFhRTB5YUZoWFYzaFRVakZXUjFadVJsTmlSMUp4V1Zod1YxZEdaSEpXVkVab1ZteHNOVmxWVlRGV01rcFZVbXBPVm1WcmNGTmFWVnBYVjFkS1IxVnNhRk5OYldoMlZteFNRMWxXVFhoWGJHUnBVbXhhVlZsWGVFdFhSbXh5V2tSU1dGWnVRbGRaVldRd1ZqQXhjbU5GYkdGV1ZuQm9WbTF6ZUdSV1VsVlNiR1JUVWxad1RWZFljRWRaVjA1WFZtNU9ZVkpVVm05WmExcDNWV3hhZEdORlRscFdhekUxVmtab2IxWlhTbkpYYkZKYVlURndNMVpFUm5Oa1IxWkdZMGQ0YVZKdVFqWldiR1F3WVRGa2MxZFlhRlJpUjJoWFdXeG9iMWRHV2xWVGEzUlVVakJhU0ZsVlduZGhSVEYwWVVWV1dHSkdjR2hYVm1SVFUwWlNjbGR0ZEZOaVNFSlFWbTB3ZUUwd01WZFhia3BoVWtWS1lWWnFRbUZUUmxWNFlVaGthRkpyY0hwV01uaHJWMjFGZUdOSGFGVldSVm96Vm0xNGEyUkdTbk5VYXpWWFlraEJNVlpxU2pCWlZsRjRWVzVTVTFkSVFsTlpWM2gzVjBac2MxVnJTbXhTYkhCV1ZXMTRUMkZyTVZoVmJuQmFWbFp3YUZsV1dtRlRSMVpJWVVab1YySkZjRTFYVjNCSFV6RkplRnBHYkdoU2JXaHdWVzAxUTJWc1duUmxSazVYVFZkU1dGWnROVk5VYkZvMllrWm9WVlpzY0ROVmFrWmFaVWRHU0U5V1pFNWhNVmt4Vm14YWIyRXhXbGhTV0docVUwVndWMWxYZEdGVlJtdzJVMnRrVkZJd1draFdWM2hQWVZaT1JsTnFTbGRpVkVJMFZHdGFjMWRHVmxsaVJtUnBZWHBXZDFaWGRHRmtNVnBYWWtac2FsSnRVbkZVVm1RMFpWWnNWbFpyT1ZaTlJFWllWVEkxZDFZd01YVlVWRVphVm14d1MxcEVSbUZqVmxaelkwVTFVMkpJUWxwV2JURjNVVzFXU0ZWc1pGZGliRXB2VlcwMVEySXhiRlZTYm1SWVVtMVNlbFl5TVVkV01ERnpVMnhvVjJKVVZsQldiVEZMVjBkV1IxVnNWbGRsYTFveVZtMHhORmR0VmtkYVNGSnJVbFJXVkZsWWNFWk5WbHBWVW0wNWFVMVhVa2xWTWpWTFYwZEtSazVXYUZWV1YxSlVXa2Q0Y21ReFpIVlViWEJwVTBWS1NWWnJaRFJoTWtaWFUyNVdVbUV6UWxsWlZFWmhWa1pXVlZOclpGTk5WVFV4VlRJeGQxVXhTbFpqUnpsWFZqTm9hRlY2Um10U01YQkhXa1pvYUUweFNscFdWM0JEV1ZaSmVGZHNhR3hUUjFKWVZGZDBkMWRHVlhsak0yaFhUV3RhZVZVeU1XOVdNVnBHWTBaU1ZtSllUWGhXYWtaM1UwZE9SMVJzWkZOaVNFSlhWbTEwWVZsV1dYbFZXR2hWWW1zMVdWWXdaRFJqTVZaeFZHdE9hazFXV2pCYVZWWXdWR3hLYzJORVFsVmlSbFV4V1ZWa1MxSnRUa2RpUjBaWFZtNUNObFpxU1hoVE1VNUlVbXRhVm1KSVFrOVZiVFZEWWpGa2NsWnRkRlpOVlRWSVZUSTFVMkV4U25SVmJrSlhZbGhTTWxSV1dtRmtSMVpJWkVVMVUxWkZXa3BXVnpBeFV6RlNjMWRzWkZoaVJrcGhWbXRXZGsxR1duRlNiazVxVFd0YVNGWkhlR3RWTWtwSlVXeHdWMUpzY0ZoWFZtUkdaREF4Vmxac1pHbFRSVXBZVjFkNGIySXdNSGhpUm1SWVlsaFNWVlZxUW1GVFZteFdWMjA1YUZKVVJsZFpNRlp6VjBaYWMxTnJlRmRTZWtaWVZUQmFVMk5zWkhSaFJrNW9aV3hhTTFadGNFTlpWazE1VlZob1dHSnNTbk5WYlhNeFYwWnNjMWRyWkU5U2JHdzFWR3hXTUZkSFJqWlJhbFphVmxad1JGWnRNVXRYVmxaeFZHeGFUbFp1UWxoWGJGcHJWVEZPVjFWdVRtcFNiVkpQVm0wMVFrMVdXbk5WYTNSUFVtMTRXRll4YUhOV1IwcEhWMnhTV21FeGNFeFdNRnBYWXpGa2RWcEhjR2xTYlhkNlZqSjBWazFYU2toVGJGcFlZVEpvV0ZWcVRtOWpiR3hXVmxob1dGSlViRlpXVjNocllWWmtTR0ZJYkZkU00xSm9XWHBHV21WR1pITmlSMFpUVmtaYVZsWlhjRTlpTWxKelYyeFdVbUpVYkZOVVZtUlRVMFphV0dWSGRGaFNNSEF3VmxjMVMxZHRSWGhqUkU1V1lsaG9WMXBXWkZOU1ZrWnpWMnMxYUUwd1NsbFdNVkpEVmpKRmVGcElUbGhpUjJoWFZtdFdTMWRHYkZWU2JtUlZVbTVDU0ZZeWRHdGhNVXBWWWtab1dHRXhjRkJaVmxwaFZsWldXVnBHWkdoTmJFWXpWbTB3ZUZZeFNYaGFSbXhvVW14d2NGbFljRmRYYkdSWVpVZDBhVTFXY0VoV1YzaFhWVEpGZWxWdVRsWmlXR2d6VmpGYWNtUXhXblJrUm1SVFZrVmFXRlpIZUdGaU1XUklVbGhzYUZKWGFGaFpWRXBUVkVaWmVGZHNaR3RXYTFwNlZqSXhjMWRHU1hsYVJGWlhZVEZ3Y2xSclpFNWxSbVJ6V2taYWFXSkZjRkpXYlRCNFlqSkplR05HYUd0U2JrSnlWRlprVTJWc1duUmxSM1JYWVhwR1dWWlhOWGRXTURGMVlVaEtXbFl6YUZCVk1HUlhVMGRHUjFwSGJGaFNNbVEyVm0weE1GbFhVWGhUV0doaFUwWktjbFZxVGxOV1JsSlhWbTVrVkZac2JEVmFSV1F3VkRGSmQxZHNhRlpOYWxaUVdWWmFTMUl5VGtkaFJuQm9UVmhDVFZaVVFtRlpWMDVYVTI1V1ZXSkhVbTlhVjNoaFYwWmFjVk51Y0U5V2JHdzBWakkxVjFWdFNrWlRiR2hhWWtaS1JGUnJXbk5qVmtwMFVteGtUbUV6UWt0V2EyUTBZVEpHV0ZOc1pGUmlSMmhZV1d4U1JrMUdjRVZUYkdSWFRWZFNNVlpYY3pGV01WbDRVMnhrV0ZZelVsaGFSRXBYVmpGV2RWUnNhR2xXUjNoWlYxZDRWMlF4V25OWGJsSk9WbnBzV1ZsclduZFhSbXQzV2tjNVYwMUVSa2xXVjNodlZtc3hWMk5FVGxaaGExcHlXVEp6TVZZeGNFaGlSazVPVFd4RmVWWnRNSGhrTVVsNFlrWmthVkp0VWxaWmJYaExWMFpzVlZOc1RtaFNiRll6VmpJeFIxWXdNVmhsU0d4WFRXNVJkMVl3V2t0ak1rNUpZVVphVjJKRmNFVldhMlEwVXpKU1IxWnVUbWhTYlZKd1ZtdFdWMDB4V25OVmEwcHNVbTFTU0ZadE5VdFpWa3B6VjI1Q1ZtSllhRE5VVjNoaFl6RmFkRkpzY0ZkaVZrcGFWbGN4TUdFeVJrZFRiazVxVTBWS1lWbHNhRk5VUmxKMFpVZEdhbUpIVWpCVmJYaHJWR3hhZFZGc2JGZFdSV3Q0VmxSS1IyTXhUbk5XYld4VFlsZG9WMVp0TVRSa01EQjRWVzVPV0dKWVVuRlVWbHAzVFVaUmVGZHRkRlZpUm5BeFZWZDRkMVl4V2paUldHaFhVa1ZhY2xVd1drOWtWazV6WVVkc1UySnJTbHBXTVZwVFVqRnNXRkpyWkZoaE1YQlpXVzF6TVZWR2JISldibVJPVm14d1NWUldhR3RXVjBwSFkwaHNXbUZyTlhKV2FrWktaVzFHU1ZOc2NHeGhNMEpKVm0xd1IxUXhaRmhVYTJSWVlrZFNWRlp0TlVOWlZsbDRXa1JDV2xadGVGbFdSelZQVm0xS2NtTkdiRnBpUjJoVVdURmFVMVl5UmtaVWJFNU9WbTEzTVZaR1dtOVVNVmw0VTI1S2FsTklRbUZVVlZwM1lVWmFjVkpyZEdwTmF6VklXVlZhYjFZeVNrZFhWRUpZVjBoQ1NGZFdXbXRYUms1eVYyczVWMkpXU2xsV1YzQlBZakZaZUZkdVVrNVRSMmh6V1Zod1IxWXhVbGRYYlhSWFRXdHdTVmxWVlRWV01ERkhWbGhvV21GcldtaFpNVnBIWkZad1IxUnJOVmRpV0dONFZqRlNRMVl3TVVkYVJXUlVZbXMxY0ZWclduZFhSbHAxWTBaa1ZGSnNjSHBYYTFZd1ZrWktjMWR1YkdGV1YxSklWbFJHWVdSV1JuTlNiR2hYVWxad2IxWXhXbXRWTVU1SFUyNUtXR0Y2YkZoWmExWjNWbFprVjFWck9WSk5WVFZJVmpJMVUxUnNaRWhWYkU1VlZteHdlbFJyV21GU01rWklaRVpXVGxadVFYZFdiR014VVRGYWRGTnNWbE5pUmtwWlZtMTRkMDB4V1hkYVJrNVVVbXR3ZWxadGN6RldNa3BKVVZSS1YwMVdjRmhYVmxwU1pVWmtjbHBHYUdsaGVsWlpWMVprTkZsV1duTlhibEpPVmxSV1QxWnRNVFJXTVZsNVpVaGthRTFFUm5sVWJGWnZWakF4ZFdGSVNscFdiSEJvVldwR2EyTXhTbk5hUjJob1RUQkZlVll5ZUZkaE1WVjRWR3RrV0dKcmNIQlZha28wVmtac2NtRkZUbXhpUjFKWVZsZDBUMkV3TVZkWGJHaFhUV3BXU0ZaVVNrdFdiR1J6Vld4V1YwMHlhRTFXYWtaaFZtMVdXRlZyYUZCV01taFVXVlJPUW1ReFduTlpla1pWVFZkU01GVnNhRzloYkVsM1YyMW9WMkZyTlhaWlZWcGFaVVp3Ums5V1RtbFNhM0EyVm0weGVrMVhSa1pOVm1Sb1RUSlNXRlJXV25kV1JscEZVMnMxYkZKdFVscFphMXBQVjBaSmVXRkdjRmhXTTFKb1ZYcEdjMVl5U2tsVGJVWlRZVE5DVUZaWE1UUmpNRFZIVjFoc1QxWXpVbGxWYlhSelRrWlZlV1JIZEZoU01GWTBWbXhvYjFZeFNYcGhSMFpoVm5wR1NGVnNXbXRqTVhCSVlVZG9UazFGV1RKV2JURXdWVEZOZUZOdVVsWlhSMUpQVm0xNGQxZEdiSEpXVkVaWVVteGFlbGxWVms5WFJscHpZMFpzVldKSGFISldWRUY0VmpGT2NtRkdaRTVpYkVwWlZteFNTMUp0Vm5OV2JrNVdZa2hDYjFSWGVFdFdWbVJ6Vm0xR1YwMVhVa2xXYlhSclZsZEtTRlZyT1ZkaVZGWkVWRzE0YTFaV1JuUmpSVGxYWWtkM01GWnFTVEZWTVZwelYydGFWR0pIVW1GWmExcExVMFphVlZKdVpGZGlSMUl3V2tWa01GWXlSalpXYWxwWFlsUkNORmw2UmxabFZrNXlZa1pLYVZKV2NGbFhWM1JyVlcxUmVHSkdWbEpXUlZwVVZGWmFZVTFXV2tobFIzUllVbXRzTlZsVlduTlhSbGw2Vlc1S1YxWkZXbGhWYWtaaFpGWldkR1ZHVGs1U2JrSlhWbXhqZUU1R1dYZE9WV1JwVW14d2FGVnJWa3RpTVZaMFpVaGtiRlp0ZEROV01qRkhWMGRLVmxacVVsZE5WMmh5Vm1wS1MxWldTbkpsUm1ScFVtNUNiMWRyV21GVU1rMTRWMjVPWVZKck5WaFpiWFJMVmpGYWRFMVlaRk5OYTFZMFZsWm9iMVpIU25KalJrWlhZbFJHVkZreFdsZGpWazUwVDFkd1RsWXphRmRXVnpBeFlURmFSMU51VG1wVFNFSllWRmR3UjAweFdraGxSMFpxVFZad2VGWlhlR3RWTWtwWVlVUmFWMkpZUWt4VmVrWlBVMFpLY21KR1VtbFNia0ozVmxkd1MySXdNWE5YYms1V1lUSlNWMVJXV25OT1JtdDNWbTA1VmxKc2NEQldWM00xVmpKS1dWVnRSbFZXVm5CaFdsWmtVMUl4Y0VoaFJUVlhUVlZ3U2xac1VrdE9SbGw0VjFoc1ZHRXllRk5aYTJRMFdWWmFjbFp1WkZaTldFSkdWVzE0ZDJFd01WaFZibXhoVWxkU00xbFdXa3BsUms1eFZXeGtWMUpYT0hkV01WcGhWVEpTUjFSdVZsUmlSa3B2VkZjMWIxZFdXbGhqUlRsV1RWWnNORlpYZUd0WFIwVjZWVzVHV2xkSVFraFdNRnByWTJ4d1NFOVdXazVoTTBKSVYxUkNiMkV4V1hsVGJHeG9VMFp3VjFaclZtRlhSbFp4VW0xMGFrMXJXa2xhUlZwUFlWWmFjbU5HWkZkaE1YQllWbFJHU21WR1VuSmFSbWhZVWpOb1VWWnRlRk5qTWtsNFZtNVNhMU5IVWxoWmEyUTBaVlpzVmxack9WZE5hM0JYVmpJMWMxWnRTa2hoU0ZwWFlrWndhRlpxU2s5U01WWnpZMGQ0YUUxWE9UWldiRkpEVm1zMVYxcEZhRk5oTWxKb1ZXcEtORlpHVWxWVGF6bE9UVlp3TUZSVmFHOVVNVXB6Vm1wU1YxSnRhSFpXTUdSR1pWWldjMkpHY0doTmJFcFZWMVJDWVdReFpFaFZhMXByVW0xU2NGVnFUbTlXTVZwWVRWUlNhRTFXUmpSVk1qVlBZVlpLUms1V2FGVldlbFpQVkZaYWMxWldTbkprUjNCb1pXeGFZVmRYZEdGV01rWlhVMWhvVTFkSFVsbFdiWGhoWTJ4YWNWTnJOV3hTYlZJeFZXMTRWMkZXU1hoVGJHeFhWak5vY2xSVlZURlNNWEJIWWtkd1UxZEdTbGRXUm1SNlpVVTFSMWRzYUd4VFJUVmhWbTEwZDJWc1dYbE9WVTVYWWxWYWVWUnNhR0ZXTWtWNFkwZG9ZVkpYVWxSVk1HUlRVbXM1VjFSck5WTk5NazR6Vm0weGQxTnJNVmRYV0d4VFltczFWVmx0ZUV0V01XeFpZMGhPVjJKR2NEQlVWbU0xVlRGS2MxWnFUbGROYWxaUVZtcEtTMU5HVm5WaVIwWlRWakZLTWxadGNFZFpWa3B6V2toS2FsSnRVbFJWYkZwM1ZsWmFjMVZyWkdwTlZtdzBWMnRvVDFsV1NuTlRia0pXWWxoU00xWXhXbUZYUjA1R1QxZHNUbFl6YUZsWFZFSlhWakZhU0ZKcVdtbFNiRnBYV1ZkMFMwMHhWWGRYYlVaclVqRmFTVnBGV210VWJVVjRWMVJLVjFadFVYZFhWbHBhWkRBeFdWWnNXbWxTTW1oYVZtMHhOR1F4YkZkalJscFlZa1UxY1ZscmFFTlRSbHBZVFZoT2FGWnJjREZWVjNCVFZqSktTRlZxVGxkU1JWcEhXbFZhVjFkWFJrZFhiV3hUVFcxb05sWnNaRFJpTVVWNVZGaG9XR0pzU2s5V2JYTXhWMFpzY2xkc1pFOVNiWGhYVjFod1YxWXdNWEpqUm1SWFRWWktURlpxU2t0V1ZscDFZMFprVG1GcldraFhiRlpoWVRKU1YxUnVUbXBTTW1oUFZqQldTMVJzV25OYVNHUlRUVlpHTlZaSE5VdFZSbHAwVlcxb1ZtRnJjSFpaYWtaVFZteHNObFpyT1dsU2JYY3dWbXBKZUZJeFpITlhiazVYWVd4S1dWbFVSbmRrYkZweldrVmFiRkl3TlVoVmJYaHJZVWRHTmxac1ZsZGlXRkpvVmpJeFVtVkdaSFZUYkdocFYwZG9WVmRYZUdGVE1XUlhWMjVPWVZKRlNsWlVWbHBMWld4VmVVNVZkR2hpUlhCWldWVmFiMVpXV2paV2ExSmFWbFp3YUZac1drOWpiSEJJWTBVMWFHVnNXa3BXTVdRd1dWZFJlVkpzWkZoaE1YQlVWakJrYjFkR1ZuUmxSWFJVVW0xM01sVXljelZXTURGV1kwUkdWMkpZYUhaWlZscHJVMGRHU1ZwR1pGZGxhMFkwVmxaamVGWXhTWGhqUldSWFlrVndjRll3V2t0V1ZscEhWMjEwVmsxVk5VaFdiR2h6WWtaT1JrNVdaRnBoTWxKVVZURmFjMVpzWkhSUFZtUlhZa2hDTmxkVVFsTlVNV1J5VFZaa2FsSkZOVmhaYkdodlRURldkRTFXVGxOTlZrb3dXVlZrTkdGV1pFaGhSemxYWWxob2FGbFVRVEZTTVZKWllVWm9XRkl6YUZsWFZ6RjZUVlprVjJKR2JHcFNiVkpaVlcxNFlVMUdjRlpXYWtKWFVtdHdlbGt3YUc5V2F6RjFZVWhLVjJGclJqUldha1pQWTFaS2MxcEhiRmRTVm04eVZtMTRVMUl4VFhoWGJHUllZbXhLVVZadE1WTldSbXh6VjJ0d1RtSkdjRWhXTWpGSFZsVXhWMkpFVWxkTmFsWllWbTB4UjA1dFNrZGlSbHBvWVRGd1RWZHJaRFJoTVZsNVVtdHNZVkpyY0U5VmExcGhWMVphY1ZOcVVtbE5hMXA2VlRKNGMxWnRTa2hsUjBaWFRVZG9SRlV3V25kV2JHUnpXa2QwVTAxV2NFaFdSRVpoWVRGWmQwMVZiRkppVlZwWVdXdGtUbVZHY0VWU2JVWnJVbXR3V2xsVlpIZFdSa2w2WVVjNVYySllRbEJaYWtaWFVqSk9SbGR0UmxOV1IzaFZWa1phVmsxWFZsZFZiazVoVTBVMWIxWnRkSGRYYkZaWVpVVk9WMDFyY0ZwWlZXUnZWakZhUmxkcmRHRldiSEJNVmpGa1IxSXhXbk5oUms1T1RXMW9XbFpxUm1wbFIxWnlUVlpvVldKSFVsaFpiWE14WVVaV2NsZHJkR3BTYkVwWVdWVldUMWRHV25OVGJHaFhWak5vVUZacVJtRmpNazVKWTBaa1RtSnJTa2xXYWtwNlpVWkplRnBJVmxSaVIxSlVWV3hvUTFSV1dsVlJiVVpYVFdzMVdGVXlOVTloYkVsNVlVVTVXbUpIVW5aV1IzaGhaRVV4VlZGc1pHbFdiSEJKVmxSSk1WTXhVWGhYYmxKV1ltdGFWMWxzYUc5Tk1WbDNWMjVrV0ZJeFdrbFZiWE0xWVZaSmVGTnNiRmRpVkVJMFZXcEdhMk14WkhOV2JHUnBZbXRLV1ZaR1l6RmlNbFp6V2taa1dHRXpVbkZVVmxVeFpWWlJlRmR0Um1oV2EzQjVXVEJhYzFkSFNrZFhiV2hhVmtWYWNsVnRjM2hXTVZwelUyMW9iR0pHY0ZaV01XUXdXVmRTZEZWWWFGaGlSbHBVV1d4U2MySXhVbGhrUjBac1lrWldORmxWYUd0V2JVcFdZMFZvVjAxdWFISldNakZHWlZaV2RWZHNXbWhOV0VKVlZtMTRZVk15VWtoVmEyUm9VbXMxV0ZWc1duZFRSbHB6V1ROb1QxSnRlRmxWYlhoclYwZEtTR0ZJU2xWV1JUVkVWakZhWVdOV1VuSlViRnBUWWxob05GWlVTakJOUmxWM1RWWmFUMWRIZUZsWlZFWjNWa1pzVmxwR1pHdFNNVnBJV1d0YWIxWXlTbGRTYWs1WFYwaENRMXBFU2xkVFJrNXlXa2RHVTJKWGFIZFdWM2hUVmpGa1YxcEdhR3RTTUZwaFZtcEdZVmRHV1hsa1J6bFZZa1p3UjFVeWVHdFdWbGw2VldwT1ZrMUdjR0ZhVlZwWFkyeHdSMXBGTlZkWFJVcEpWbTF3U2sxV2JGZGFTRkpYWW10d2NWVnNaRzloUmxaelYyNWtWbEp1UWtoV01uaHJZVEZKZUZOcmFGZFdNMmhVVmxSR1lWZFdSbk5oUm1ScFZrVkpNRlpIZEd0U2JWWkhWMnhzYUZKdFVtOVVWM2hMWlVaYVdHVkhkR2xOVmtZMFZqSTFUMkZHU25KT1dFWmFZVEZ3YUZwWGVHRlhSMVpJWkVab1UySklRWGhXVm1RMFlURlpkMDFZUmxkaWEzQllXV3RrVTFOR1VuUmxSWFJxVFZoQ1NGa3dWVEZWTWtWNlVXeEtWMkpZUWtSWFZscHJaRVphZFZSc1RtbGhNMEo1VmxjeE5GbFdaRWRYYmxKUFZsVndjMVp0TVZObGJGcDBUVlJDVjFaVVJsZFViRnB2VmpKS1ZWWnNRbGRpUjFKTVZqQmtWMU5GT1ZkV2JHUlhUVzFvUmxacldsTlNNV3hZVkZob2FsSlhlR2hWYlhNeFZERmFjVlJ0T1ZoaVJuQjVWMWh3UjFaVk1WaGxSbWhXVFc1b2NsbFhlRXRPYlVwSFdrWndhVlpHV2tWV2FrSmhZekExYzFOdVRtRlNNMUpVVm10V1lWWXhXbk5aTTJoUFVqQmFXRlV4YUhkV2JGcEdZMFpzVjJFeFdreFpWVnB6VmxaS2RGSnNhRk5oZWxZMVZqSjBhMk15U2toU1dIQlNZa2RvV0Zsc1VsZE5NVlpZVFZaa1UwMVhVakZWTW5odllWWmFWMk5JYUZkU2JWRjNXa2R6ZUdNeFduTmhSM2hUWWxaS2RsWlhlRk5TTVdSSFYxaG9WbUV3TlZoVVYzUmhaVlpWZVUxWE9WZE5WWEJIV1RCYVUxWnRSbkpYYkZKaFVteHdVRmt5Y3pWV01YQklZVWQ0YVZKdVFsaFdiVEIzWlVVMVNGSnVTazlXYkhCUFZUQmtiMWRXYkhKWGJVWlhWbXh3ZVZadE1VZGhiRnB6VTJ4c1drMHpRa2haYTJSTFVqSk9SbUZHY0ZkV01VWXpWbTF3UjFkdFVYbFVhMXBwVWpCYVdGWnROVU5WVmxweFUxaG9WRTFXY0ZoVk1uaFhWVzFLU1ZGdE9WcFdSVm96V1dwR2EyTnNaSFJrUmxaT1ZsZDNNRll5ZEc5Vk1rVjRVMnhXVjJKSGFGaFpWRVpoVjBaU2RHVkhSbXRTTVVwSldUQmtORlV4V2taWGEyeFhUVzVTZGxWNlJsTmpNWEJHVjJzNVYySllhR2hXYlhSWFdWVXdlRmR1UmxOaWF6VnhWRlphWVdWV1pISmFSRkpvVm10d01GcEVUbmRXTURGMVZXMW9XbFpGY0VoYVJWcExZMVprYzFSdGJGTmlhMHBhVm10YWFrMVhTWGROU0docFVtMVNXVmxVVGxOamJGcDBaRWRHYkZac2NEQmFWV00xVjBaS2NrNVZaRlpOYmxKNlZqQmtSbVZHVG5KaFJuQlhVbFp3VEZkc1ZtRlZNbEpYVjI1T1lWSXllRmxWYkZaM1ZteGFjbGRzWkZwV01VWTBWMnRXYTFkSFJYbFZiR2hhWVRKU1ZGa3hXbE5XYkZaeVZHczVVMkpXU2pWV2FrbzBZVEZaZUZOdVRtcFNWMUpZVkZkd1YxTkdXWGxOVlZwc1ZteEtWbFZ0ZUZkaFJURlpVV3BhV0ZaRmJ6QlpWRXBUVW1zNVYxcEhjRk5pVmtwMlZrWmpNV0Z0VmtkWFdHaFlZa2RTYjFsWWNGZFhSbGw0WVVoT1YxSXdjSHBXTW5oUFYyMUZlR05GZUZoV2JIQjZXWHBLUjFORk9WaGxSMnhUVFRGRmVGWXllRmRpTWtWNFZsaHNWR0V5ZUZOWlZFcFRWbXhzY2xkdVpGWlNiWGhZVjJ0V1lXRXdNWEpPVld4YVZsWndjbGxXV2t0amJVNUdZa1pvVjJKRmNFMVdWekI0VmpGSmVGZHVWbFZpVjJoVVdWaHdWMlF4V2xoTlZGSnJUVmRTU0ZkcldtdFpWa3BHVTIxR1YySllhRE5XTUZwelkyMUdSMVJzVm1sU2JrSkpWbFJKTVZReFdYbFRiR3hvVWpCYVZsWnFUbTlYUmxsM1drVTVUMkpHY0hwWlZWcFBZVVV3ZDFOc2FGZE5WMUYzVjFaa1VtVkdjRWxUYXpWWFZqRktXVmRXWkRSVE1XeFhWMjVTVGxack5WVlZiWGhMVFVad1ZsZHRkRmhTYkd3elZqSjBiMWRzV2xkalNGcFhZVEZ3VEZadE1VOVNNVTV6V2tkc1dGSXlhRlpXYkdoM1VqRlNkRlpyWkZaaWEzQm9WVzE0WVdOR2JGbGpSbVJZVW0xU1dWcFZXbXRYYkZwelVtcFNXbUV4Y0haWmExcEtaREZrZFZSc1dtbFhSMmQ2VmxSQ1lXRXhaRmhVYTFwaFVqSm9XRlpyVm1GT1ZscEhWMnhPVmsxWFVrbFZiR2h6WVVaS2NsTnRSbGRpUm5BelZrVmFZV1JGTVZaUFZsSlRUVVp3U1ZadE1UUmhNVmw1VWxod1VtRXllRmhaVkVaM1lVWmtWMXBGV214U2JWSjZWMnRhWVdGWFJYcFJiR1JZVmpOU1YxUldXbUZTTWtwSlZHeGFhV0V6UWxCV2JUQjRWVEpXYzFkdVVteFNWR3hZVm14U1IxZFdXbGhPV0U1WFZteHdNRmxWVm05V01WcEdZMFY0WVZKc2NFaGFSV1JIVWpGa2RHSkdaRk5XYmtKWFZtMHdlRTFHYkZkWFdHeFZZbXMxYUZVd1dtRlhWbXh6WVVjNVdGSnNjSGxXTWpGSFYwWktkRlZ1YkZkaVZFVjNWa1JHUzJNeVNrVlViRlpYVmpKb01sWnRkR3RTTURWelYyNU9hRkp0VW5CV01HUnZWRlphVlZGdFJtcE5helZZVlRJMVMxZEhTbGxoUm1oYVlUSm9SRlJ0ZUd0V01WcDBVbXhXVG1FeGNGbFdWRVp2WXpKR1IxTnVTbGhpUjJoaFdXdGtiMVpHV1hkWGJHUlBZa1Z3ZWxaSGVHdFViRnAxVVdwYVYySlVSVEJXVkVwSFZqRk9jMVpzWkdsaVNFSmFWbTF3VDFVeVVuTldiRlpUWWtoQ2MxVnRNVk5sYkd4V1drUkNWazFFUWpSVk1qVmhWakZhTmxKVVFtRlNSVVkwVldwR2EyTXhjRWRYYldoT1RWVndXbFl4WkRCWlYxRjNUVlZrYVZKc2NHOVZiR2hUVjFac2NsZHVaR3hpUjNRelYydGpOVll3TVhKWGJteFhUV3BXVEZacVNrdFNNazVHWVVad2JHRXpRbEZXVjNCSFpERk9TRk5yWkdGU1ZGWndWbXBLYjFkV1duUk5XR1JUVFZaV05GVnNhSE5WTVdSSVlVWmFWMDFIVVRCV2FrWnpWbFpPYzFSdGJFNVdhM0JYVmxSS2QxVXlSa2RUYms1WVltMW9XRlZxVGxOVlJscHhVbTFHYWsxWFVqRlpNRnAzVmpGYWMyTkZNVmhXTTFKb1YxWmtUbVZXVG5KV2JHUnBVMFZLVUZaWE1UUldiVlpIVjI1U2ExSnNjSE5WYWtFeFpXeGtjbUZGZEdoV2EzQjZXVEJWTlZkdFNsVlNibHBYWWtad2FGbDZSbkpsYlVaSFZXczFWMkpyU1RGV2EyUTBXVmROZUZkc2FGUmhNbEp4Vlc1d2MxWnNXblJsU0dST1RWZDRlRlZ0TVRCV01WcHlWMnBDVm1KWWFIWlpWbHBoWXpKSmVscEdaR2hOYkVZelYxaHdSMWxXVGtkVWJrNXBVakpvVkZsclZuZFdNVnAwWlVkMGFVMVZjRWhXTWpWVFlrWkpkMWRzYkZaaGExcG9WVEZhY21ReFdsVlNiR1JPWVROQ1NGZFVRbGRqTVZsNVUyeFdVMVpGU21GWlYzUmhWMFpXY1ZKdGRHcE5hM0JJVmpJeGMxWXhXblZSYlRsWFlsUkdNMVpFUmxOa1JscHlXa1pvYUUxV2NGVlhWekI0VlRGYVIxVnNaR2hTVlRWVVZGWmFTMlZzWkhKVmJFNW9VbXh3ZWxrd1duZFdiRmw2VlZoa1YwMUdjR2hWYlhoUFpGWk9jMVpzWkZkaWEwcFpWakowVTFGdFZrZFhXR2hxVWxkb2NGVnNVbGRVTVd4eVZtNWtXRlpzYkRWYVZXUXdWR3hLY2sxVVVsZGlXRkp5V1ZaYVMyTXhaSE5XYkhCWFVsUldWVlp0ZUdGV01sSklWbXRzWVZJemFGaFpiR2h2VjBaWmVXUkhPVlZOVm5CNVZGWmFZV0ZzU25SVmJVWlZWbFp3V0ZScldscGtNWEJHWkVaT1RtRjZWa3RXVkVvMFZqRlplRmR1VmxKaVJscFlWbXBPUTFOR1ZqWlNiWFJZVW10d2VWbFZaRzlWTWtZMlZtNXdXRll6VW1oYVJFRXhWakZrZFZWck5WaFNNVXBVVjFkNFlWbFdTWGhWYms1WVlsaFNXVlZxUW5kbGJGVjVaVVZPVjAxcmNGWlZiWGhUVjBaYWMyTkhhR0ZTVjFKVVZXcEdkMUpyT1ZkYVIyeFhZVEk0ZUZacVJtRldNV3hZVWxob1lWTkZOVmxaYlhSM1kwWndXR1JJWkZkTlYzaDZWbGQ0YTFSck1WaFZiR2hYVFdwR1NGbFVSa3RqTVdSMVkwWmtWMDB5YUhsV2EyUTBXVmRTVjFKdVRsZGlSMmh2VkZaYWQyVldXbGxqUldSVlRWVTFTRlpITlV0WFIwWTJZa1pvVlZaNlJuWmFSRVpoWTFaR2RGSnNUazVTUmxvMlZtcEpNVkl4VlhsVGJHeFdZWHBzVjFsWGRFdGhSbkJYVjJ4T2FrMVhVakJVTVZwcllWWmFXVkZxV2xkV1JXOHdWMVphYTJNeFpISlhiR2hvWVhwV1dWWnRkRmRaVjFaellrUmFVMkpIVW5GVVZtaERVMVpyZDFkck9XaFdhelZIVlRGU1ExWXlTa2RqU0VaaFZsWndTMXBXV2t0WFZuQkdUbFprYVZZeWFEWldiRkpEWVRBMVIxcEZaRmRpYkVwelZXeG9VMVpXVm5STlZGSlhUVmRTZVZadGNFTldNREZ5WTBaa1drMUdXbWhXYWtwTFYxZEdSMkZHWkdoaE1YQm9WMnRTUW1WR1dsZFdiazVoVWpKb1QxWXdWa3RrYkZwMFpFWk9VMDFWTVRWV1J6VkxWREZhYzJOSVFsWmhhM0IyVm10YWMyTXhjRWhQVm1oWFlsWktObFl5ZEZOUk1XUklVMnhrV0dKdVFsbFpWRVozWkd4c1ZWSnJjR3ROVjFJeFZXMTRkMkZXU25WUmJUbFlZa2RSTUZkV1pGTlRSbHB5WWtaV2FWSXhTbGxXUmxadlVURk5lRmRzWkZwbGExcFRWRlphYzA1V1ZuTmhTRTVYWWtad1IxVXlNVzlXTWtwWllVUk9XazF1YUhwVWJYaExaRWRTU0dOSGFHeGlXR2hoVmpGU1EyRXlUWGhXV0doWVlURndXRmxYZUhkWFJteHpZVVpPYWxac1NsaFdNbmhoWWtaS2MxZHFSbGRTTTJoMlZqQmFTbVZ0UmtsWGJHUlhaV3haZWxkWWNFZGhNVWw1VTJ0c1ZtRjZiRmhXYkZKWFYxWmFXRTFFUmxKTlZUVllXVEJhWVZZeFdrWlhia0pXWWxoU00xcFdXbkprTVZaeVdrWmtUbEpGV1hoWFZsWlhZakZaZVZOc2JGVmhiRXBYVkZWa1UxZEdWbk5YYkU1cVRWZFNNRnBWWkc5VWJHUkdVMnR3VjJKWVVsUlZha1p6VmpGS1dXRkdhR2hOYkVwWFYxZDBhMDVHVlhoaVJsWlZZbFJzV0ZSV1duZGxWbHBZWkVWMFZVMVdjSGxVYkZwelYyMUZlV0ZGZUZwV00yaEhXa1JLUzFOV2NFZFZhelZYVm14VmVGWnNWbUZVTVU1MFZHdGFhMUpyY0ZKV2ExSkRZMFpOZUZSdVNsRlZNR3gzVXpGRk9WQlRTWEJMVVQwOUlpa3AiKSk="))"))